<Application x:Class="SFIClient.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SFIClient"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--====================COLORS====================-->
        <SolidColorBrush x:Key="PrimaryColor">#0065AB</SolidColorBrush>
        <SolidColorBrush x:Key="MiddlePrimaryColor">#004879</SolidColorBrush>
        <SolidColorBrush x:Key="DarkPrimaryColor">#072146</SolidColorBrush>
        <SolidColorBrush x:Key="DarkGray">#363636</SolidColorBrush>
        <SolidColorBrush x:Key="MediumGray">#484848</SolidColorBrush>
        <SolidColorBrush x:Key="Gray">#848484</SolidColorBrush>
        <SolidColorBrush x:Key="LightGray">#BFB8B8</SolidColorBrush>
        <SolidColorBrush x:Key="Red">#ED0000</SolidColorBrush>
        
        <!--===============STYLES FOR TEXTS===============-->
        <!--Titles-->
        <Style x:Key="Title" TargetType="TextBlock">
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <!--Subtitles-->
        <Style x:Key="Subtitle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <!--Emphasis texts-->
        <Style x:Key="Emphasis" TargetType="TextBlock">
            <Setter Property="FontSize" Value="17"/>
        </Style>

        <!--Paragraphs-->
        <Style x:Key="Paragraph" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="LineHeight" Value="1.6"/>
        </Style>

        <!--Tiny text-->
        <Style x:Key="TinyText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="LineHeight" Value="1.6"/>
        </Style>

        <!--===============STYLES FOR INPUTS===============-->
        <!--Basic text inputs-->
        <Style x:Key="TextInput" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource MediumGray}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border 
                            x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4">
                            <ScrollViewer VerticalScrollBarVisibility="Hidden" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MediumGray}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextInputError" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="Red"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border 
            x:Name="border"
            BorderThickness="{TemplateBinding BorderThickness}"
            BorderBrush="{TemplateBinding BorderBrush}"
            CornerRadius="4">
                            <ScrollViewer VerticalScrollBarVisibility="Hidden" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--Text input placeholder-->
        <Style x:Key="TxtInputPlaceHolder" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Gray}"/>
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style>

        <!--===============STYLES FOR BUTTONS===============-->
        <!--Primary button-->
        <Style x:Key="PrimaryBtn" TargetType="Button">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="24, 16, 24, 16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="{StaticResource PrimaryColor}"
                            CornerRadius="4"
                            x:Name="border"
                            Cursor="Hand">
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource MiddlePrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Secondary button-->
        <Style x:Key="SecondaryBtn" TargetType="Button">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Padding" Value="24, 16, 24, 16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="White"
                            BorderThickness="2"
                            BorderBrush="{StaticResource PrimaryColor}"
                            CornerRadius="4"
                            x:Name="border"
                            Cursor="Hand">
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MiddlePrimaryColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource MiddlePrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Ternary button-->
        <Style x:Key="TernaryBtn" TargetType="Button">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Padding" Value="24, 16, 24, 16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="White"
                            CornerRadius="4"
                            x:Name="border"
                            Cursor="Hand">
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource MiddlePrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--No hoverable buttons-->
        <Style x:Key="NoHoverStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para la flecha del ComboBox -->
        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"/>
                            <Path x:Name="Arrow"
                          Grid.Column="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Margin="-30, 0, 0, 0"
                          Data="M0,0 L0,2 L6,8 L12,2 L12,0 L6,6 Z"
                          Fill="Black"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Arrow" Property="Data" Value="M0,6 L4,2 L8,6 L8,8 L4,4 L0,8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Combobox-->
        <Style x:Key="comboBox" TargetType="ComboBox">
            <Setter Property="Foreground" Value="{StaticResource MediumGray}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="MainBorder"
                    Background="White"
                    BorderBrush="{StaticResource MediumGray}"
                    BorderThickness="2"
                    CornerRadius="4">
                                <Grid>
                                    <ToggleButton x:Name="ToggleButton"
                                  Grid.Column="2"
                                  ClickMode="Press"
                                  Focusable="false"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButton}"/>
                                    <ContentPresenter x:Name="ContentSite"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      HorizontalAlignment="Left"
                                      IsHitTestVisible="False"
                                      Margin="3"
                                      VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <TextBlock x:Name="PlaceholderText"
                       Text="Placeholder"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Margin="8,0"
                       Foreground="{StaticResource Gray}"
                       Visibility="Collapsed"/>
                            <Popup x:Name="Popup"
                   AllowsTransparency="True"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="Bottom"
                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                      SnapsToDevicePixels="True"
                      MinWidth="{TemplateBinding ActualWidth}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                            Background="White"
                            BorderThickness="2"
                            BorderBrush="Black"/>
                                    <ScrollViewer Margin="4"
                                  SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource MediumGray}"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding SelectedItem, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--DatePicker-->
        <Style x:Key="DatePicker" TargetType="{x:Type DatePicker}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
                <Style TargetType="DatePickerTextBox">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Setter Property="Foreground" Value="{StaticResource Gray}"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="Border" x:Key="RoundedBorder">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="BorderBrush" Value="{StaticResource MediumGray}"/>
        </Style>

    </Application.Resources>
</Application>
