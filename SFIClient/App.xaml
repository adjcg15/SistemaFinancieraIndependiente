<Application 
    x:Class="SFIClient.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SFIClient"
    StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--====================COLORS====================-->
        <SolidColorBrush x:Key="PrimaryColor">#0065AB</SolidColorBrush>
        <SolidColorBrush x:Key="MiddlePrimaryColor">#004879</SolidColorBrush>
        <SolidColorBrush x:Key="DarkPrimaryColor">#072146</SolidColorBrush>
        <SolidColorBrush x:Key="DarkGray">#363636</SolidColorBrush>
        <SolidColorBrush x:Key="MediumGray">#484848</SolidColorBrush>
        <SolidColorBrush x:Key="Gray">#848484</SolidColorBrush>
        <SolidColorBrush x:Key="LightGray">#BFB8B8</SolidColorBrush>
        <SolidColorBrush x:Key="Red">#ED0000</SolidColorBrush>

        <!--===============STYLES FOR TEXTS===============-->
        <!--Titles-->
        <Style x:Key="Title" TargetType="TextBlock">
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <!--Subtitles-->
        <Style x:Key="Subtitle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <!--Emphasis texts-->
        <Style x:Key="Emphasis" TargetType="TextBlock">
            <Setter Property="FontSize" Value="17"/>
        </Style>

        <!--Paragraphs-->
        <Style x:Key="Paragraph" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="LineHeight" Value="1.6"/>
        </Style>

        <!--Tiny text-->
        <Style x:Key="TinyText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="LineHeight" Value="1.6"/>
        </Style>

        <!--===============STYLES FOR INPUTS===============-->
        <!--Basic text inputs-->
        <Style x:Key="TextInput" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource MediumGray}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border 
                            x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4">
                            <ScrollViewer VerticalScrollBarVisibility="Hidden" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MediumGray}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Password inputs-->
        <Style x:Key="PasswordInput" TargetType="PasswordBox" BasedOn="{StaticResource {x:Type PasswordBox}}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource MediumGray}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border 
                            x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4">
                            <ScrollViewer VerticalScrollBarVisibility="Hidden" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MediumGray}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Password inputs-->
        <Style x:Key="PasswordInputError" TargetType="PasswordBox" BasedOn="{StaticResource {x:Type PasswordBox}}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource Red}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border 
                            x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4">
                            <ScrollViewer VerticalScrollBarVisibility="Hidden" x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Text input placeholder-->
        <Style x:Key="TxtInputPlaceHolder" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Gray}"/>
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style>

        <!--Basic text inputs with error-->
        <Style x:Key="TextInputError" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource Red}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border 
                            x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4">
                            <ScrollViewer VerticalScrollBarVisibility="Hidden" x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Basic text inputs with error 2-->
        <Style x:Key="SecondTextInputError" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="Red"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border 
                    x:Name="border"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="4">
                            <ScrollViewer VerticalScrollBarVisibility="Hidden" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--File uploader input-->
        <Style x:Key="FileUploader" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkGray}"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Padding" Value="24, 16, 24, 16"/>
            <Setter Property="Foreground" Value="{StaticResource DarkGray}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                            x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4"
                            Background="White"
                            Cursor="Hand">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Image 
                                    Grid.Column="0"
                                    Source="/Assets/PlusIcon.png" 
                                    Width="20" Height="20" VerticalAlignment="Center"/>
                                <ContentPresenter
                                    Grid.Column="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MediumGray}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--File downloader-->
        <Style x:Key="FileDownloader" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkGray}"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Padding" Value="24, 16, 24, 16"/>
            <Setter Property="Foreground" Value="{StaticResource DarkGray}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                    x:Name="border"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="4"
                    Background="White"
                    Cursor="Hand">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Image 
                            Grid.Column="0"
                            Source="/Assets/DownLoadIcon.png" 
                            Width="20" Height="20" VerticalAlignment="Center"/>
                                <ContentPresenter
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MediumGray}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--File uploader input with errors-->
        <Style x:Key="FileUploaderError" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource Red}"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Padding" Value="24, 16, 24, 16"/>
            <Setter Property="Foreground" Value="{StaticResource DarkGray}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                            x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4"
                            Background="White"
                            Cursor="Hand">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Image 
                                    Grid.Column="0"
                                    Source="/Assets/PlusIcon.png" 
                                    Width="20" Height="20" VerticalAlignment="Center"/>
                                <ContentPresenter
                                    Grid.Column="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--File presenter input-->
        <Style x:Key="FilePresenter" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkGray}"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Padding" Value="24, 16, 24, 16"/>
            <Setter Property="Foreground" Value="{StaticResource DarkGray}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                            x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4"
                            Background="White"
                            Cursor="Hand">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Image 
                                    Grid.Column="0"
                                    Source="/Assets/DiscardFileIcon.png" 
                                    Width="20" Height="20" VerticalAlignment="Center" />
                                <ContentPresenter
                                    Grid.Column="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MediumGray}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBox arrow-->
        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"/>
                            <Path x:Name="Arrow"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="-30, 0, 0, 0"
                                Data="M0,0 L0,2 L6,8 L12,2 L12,0 L6,6 Z"
                                Fill="Black"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Arrow" Property="Data" Value="M0,6 L4,2 L8,6 L8,8 L4,4 L0,8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBox-->
        <Style x:Key="ComboBox" TargetType="ComboBox">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid Height="50" Cursor="Hand">
                            <Border 
                                x:Name="MainBorder"
                                BorderBrush="{StaticResource MediumGray}"
                                BorderThickness="2"
                                CornerRadius="4"
                                Cursor="Hand">
                                <Grid>
                                    <ToggleButton 
                                        x:Name="ToggleButton"
                                        Grid.Column="2"
                                        ClickMode="Press"
                                        Focusable="false"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource ComboBoxToggleButton}"/>
                                    <Border Padding="16, 0, 0, 0">
                                        <ContentPresenter 
                                            x:Name="ContentSite"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            HorizontalAlignment="Left"
                                            IsHitTestVisible="False"
                                            VerticalAlignment="Center"/>
                                    </Border>
                                </Grid>
                            </Border>
                            <Popup x:Name="Popup"
                               AllowsTransparency="True"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                    SnapsToDevicePixels="True"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="2"
                                        BorderBrush="Black"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter 
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource MediumGray}"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding SelectedItem, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBox with errors-->
        <Style x:Key="ComboBoxError" TargetType="ComboBox">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid Height="50" Cursor="Hand">
                            <Border
                                BorderBrush="{StaticResource Red}"
                                BorderThickness="2"
                                CornerRadius="4"
                                Cursor="Hand">
                                <Grid>
                                    <ToggleButton 
                                        x:Name="ToggleButton"
                                        Grid.Column="2"
                                        ClickMode="Press"
                                        Focusable="false"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource ComboBoxToggleButton}"/>
                                    <Border Padding="16, 0, 0, 0">
                                        <ContentPresenter 
                                            x:Name="ContentSite"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            HorizontalAlignment="Left"
                                            IsHitTestVisible="False"
                                            VerticalAlignment="Center"/>
                                    </Border>
                                </Grid>
                            </Border>
                            <Popup x:Name="Popup"
                                AllowsTransparency="True"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                Placement="Bottom"
                                PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                    SnapsToDevicePixels="True"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="2"
                                        BorderBrush="Black"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter 
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding SelectedItem, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--DatePicker-->
        <Style x:Key="DatePicker" TargetType="{x:Type DatePicker}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="16, 12, 16, 12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
                <Style TargetType="DatePickerTextBox">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Setter Property="Foreground" Value="{StaticResource Gray}"/>
                </Style>
            </Style.Resources>
        </Style>

        <!--Checkboxes-->
        <Style x:Key="CheckBox" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Cursor="Hand" Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid>
                                    <Rectangle 
                                        x:Name="CheckMark"
                                        Stroke="{StaticResource DarkGray}"
                                        RadiusX="4"
                                        RadiusY="4"
                                        StrokeThickness="2" 
                                        Height="24" Width="24" 
                                        Visibility="Collapsed">
                                        <Rectangle.Fill>
                                            <ImageBrush ImageSource="/Assets/CheckBoxIcon.png"/>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                    <Rectangle 
                                        x:Name="UncheckedMark"
                                        Visibility="Collapsed"
                                        Stroke="{StaticResource DarkGray}"
                                        RadiusX="4"
                                        RadiusY="4"
                                        StrokeThickness="2" 
                                        Height="24" Width="24"
                                        Fill="Transparent"/>
                                </Grid>
                            </BulletDecorator.Bullet>

                            <ContentPresenter Margin="12,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                RecognizesAccessKey="True"/>
                            <VisualStateManager.VisualStateGroups>

                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="UncheckedMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--===============STYLES FOR BUTTONS===============-->
        <!--Primary button-->
        <Style x:Key="PrimaryBtn" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="24, 16, 24, 16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="{StaticResource PrimaryColor}"
                            CornerRadius="4"
                            x:Name="border"
                            Cursor="Hand"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource MiddlePrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Search button-->
        <Style x:Key="SearchBtn" TargetType="Button">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="8, 8, 8, 8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="{StaticResource PrimaryColor}"
                            CornerRadius="4"
                            x:Name="border"
                            Cursor="Hand">
                            <Grid>
                                <Image Width="32" Height="32" Source="/Assets/SearchIcon.png"/>
                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource MiddlePrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Secondary button-->
        <Style x:Key="SecondaryBtn" TargetType="Button">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Padding" Value="24, 16, 24, 16"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="2"
                            BorderBrush="{StaticResource PrimaryColor}"
                            CornerRadius="4"
                            x:Name="border"
                            Cursor="Hand"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MiddlePrimaryColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource MiddlePrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Ternary button-->
        <Style x:Key="TernaryBtn" TargetType="Button">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Padding" Value="24, 16, 24, 16"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            x:Name="border"
                            Cursor="Hand"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource MiddlePrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--No hoverable buttons-->
        <Style x:Key="NoHoverStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Plus button-->
        <Style x:Key="PlusBtn" TargetType="Button">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="0, 16, 14, 16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                    Background="{StaticResource PrimaryColor}"
                    CornerRadius="4"
                    x:Name="border"
                    Cursor="Hand">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Width="20" Height="20" Source="/Assets/Plus2Icon.png" Margin="20, 0, 10, 0"/>
                                <ContentPresenter
                                    Grid.Column="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource MiddlePrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Plus Secondary button-->
        <Style x:Key="PlusSecondaryBtn" TargetType="Button">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Padding" Value="0, 16, 24, 16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="White"
                            BorderThickness="2"
                            BorderBrush="{StaticResource PrimaryColor}"
                            CornerRadius="4"
                            x:Name="border"
                            Cursor="Hand">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Width="20" Height="20" Source="/Assets/Plus3Icon.png" Margin="20, 0, 10, 0"/>
                                <ContentPresenter
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MiddlePrimaryColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource MiddlePrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Ver mas button-->
        <Style x:Key="SeeMoreBtn" TargetType="Button">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Padding" Value="0, 0, 0, 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                    Background="#FAFAFA"
                    CornerRadius="4"
                    x:Name="border"
                    Cursor="Hand">
                            <ContentPresenter
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource MiddlePrimaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--RadioButton-->
        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Margin" Value="0,0,16,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="PART_Bullet"
                         Grid.Column="0"
                         Fill="{TemplateBinding Background}"
                         Stroke="{TemplateBinding BorderBrush}"
                         StrokeThickness="{TemplateBinding BorderThickness}"
                         Width="24" Height="24"/>
                            <ContentPresenter Grid.Column="1"
          Margin="8,0,0,0"
          VerticalAlignment="Center"
          HorizontalAlignment="Left"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="PART_Bullet" Property="Fill" Value="{StaticResource MediumGray}"/>
                                <Setter TargetName="PART_Bullet" Property="Stroke" Value="{StaticResource MediumGray}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="PART_Bullet" Property="Fill" Value="LightGray"/>
                                <Setter TargetName="PART_Bullet" Property="Stroke" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--RadioButton wirth error-->
        <Style x:Key="RadioButtonError" TargetType="RadioButton">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0,0,16,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="PART_Bullet"
                         Grid.Column="0"
                         Fill="{TemplateBinding Background}"
                         Stroke="{TemplateBinding BorderBrush}"
                         StrokeThickness="{TemplateBinding BorderThickness}"
                         Width="24" Height="24"/>
                            <ContentPresenter Grid.Column="1"
              Margin="8,0,0,0"
              VerticalAlignment="Center"
              HorizontalAlignment="Left"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="PART_Bullet" Property="Fill" Value="{StaticResource MediumGray}"/>
                                <Setter TargetName="PART_Bullet" Property="Stroke" Value="{StaticResource MediumGray}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="PART_Bullet" Property="Fill" Value="LightGray"/>
                                <Setter TargetName="PART_Bullet" Property="Stroke" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="PART_Bullet" Property="Fill" Value="White"/>
                                <Setter TargetName="PART_Bullet" Property="Stroke" Value="{StaticResource Red}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--===================VARIOUS STYLES===================-->
        <!--Rounded border-->
        <Style TargetType="Border" x:Key="RoundedBorder">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="BorderBrush" Value="{StaticResource MediumGray}"/>
        </Style>

        <Style TargetType="Border" x:Key="RoundedBorderError">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="BorderBrush" Value="{StaticResource Red}"/>
        </Style>

        <!--Blue border decorator-->
        <Style x:Key="DecoratorBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource Gray}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsActive}" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryColor}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>